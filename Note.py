import json
import os
from datetime import datetime

class Заметка:
    def __init__(self, идентификатор, заголовок, текст, создано=None, обновлено=None):
        """
        Конструктор класса Заметка для создания объекта заметки.

        Args:
            идентификатор (int): Уникальный идентификатор заметки.
            заголовок (str): Заголовок заметки.
            текст (str): Текст заметки.
            создано (str, optional): Дата и время создания заметки в формате строки. 
                Если не указано, будет использовано текущее время.
            обновлено (str, optional): Дата и время последнего обновления заметки в формате строки. 
                Если не указано, будет использовано текущее время.
        """
        self.идентификатор = идентификатор
        self.заголовок = заголовок
        self.текст = текст
        self.создано = создано if создано else datetime.now().strftime('%Y-%m-%d %H:%M:%S')
        self.обновлено = обновлено if обновлено else datetime.now().strftime('%Y-%m-%d %H:%M:%S')

class ПриложениеЗаметок:
    def __init__(self, файл_заметок='заметки.json'):
        """
        Конструктор класса ПриложениеЗаметок для инициализации приложения.

        Args:
            файл_заметок (str, optional): Имя файла для хранения заметок в формате JSON. По умолчанию 'заметки.json'.
        """
        self.файл_заметок = файл_заметок
        self.заметки = self.загрузить_заметки()

    def загрузить_заметки(self):
        """Метод для загрузки заметок из файла."""
        if os.path.exists(self.файл_заметок):
            with open(self.файл_заметок, 'r') as файл:
                данные_заметок = json.load(файл)
                заметки = [Заметка(**заметка) for заметка in данные_заметок]
        else:
            заметки = []
        return заметки

    def сохранить_заметки(self):
        """Метод для сохранения заметок в файл."""
        with open(self.файл_заметок, 'w') as файл:
            данные_заметок = [vars(заметка) for заметка in self.заметки]
            json.dump(данные_заметок, файл, indent=4)

    def добавить_заметку(self, заголовок, текст):
        """Метод для добавления новой заметки."""
        идентификатор_заметки = len(self.заметки) + 1
        self.заметки.append(Заметка(идентификатор_заметки, заголовок, текст))
        self.сохранить_заметки()
        print("Заметка успешно добавлена.")

    def редактировать_заметку(self, идентификатор, заголовок, текст):
        """Метод для редактирования существующей заметки."""
        for заметка in self.заметки:
            if заметка.идентификатор == идентификатор:
                заметка.заголовок = заголовок
                заметка.текст = текст
                заметка.обновлено = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                self.сохранить_заметки()
                print("Заметка успешно отредактирована.")
                return
        print("Заметка не найдена.")

    def удалить_заметку(self, идентификатор):
        """Метод для удаления заметки."""
        self.заметки = [заметка for заметка in self.заметки if заметка.идентификатор != идентификатор]
        self.сохранить_заметки()
        print("Заметка успешно удалена.")

    def список_заметок(self):
        """Метод для отображения списка заметок."""
        if not self.заметки:
            print("Заметки не найдены.")
            return
        for заметка in self.заметки:
            print(f"ID: {заметка.идентификатор}, Заголовок: {заметка.заголовок}, Создано: {заметка.создано}, Обновлено: {заметка.обновлено}")
            print("Текст:", заметка.текст)
            print()

    def запустить(self):
        """Метод для запуска приложения."""
        while True:
            print("\nМеню Приложения Заметок:")
            print("1. Добавить заметку")
            print("2. Редактировать заметку")
            print("3. Удалить заметку")
            print("4. Список заметок")
            print("5. Выйти")

            выбор = input("Введите ваш выбор: ")

            if выбор == '1':
                заголовок = input("Введите заголовок заметки: ")
                текст = input("Введите текст заметки: ")
                self.добавить_заметку(заголовок, текст)
            elif выбор == '2':
                идентификатор = int(input("Введите идентификатор заметки для редактирования: "))
                заголовок = input("Введите новый заголовок: ")
                текст = input("Введите новый текст: ")
                self.редактировать_заметку(идентификатор, заголовок, текст)
            elif выбор == '3':
                идентификатор = int(input("Введите идентификатор заметки для удаления: "))
                self.удалить_заметку(идентификатор)
            elif выбор == '4':
                self.список_заметок()
            elif выбор == '5':
                print("Завершение работы Приложения Заметок.")
                break
            else:
                print("Неверный выбор. Пожалуйста, введите правильный вариант.")

if __name__ == "__main__":
    приложение = ПриложениеЗаметок()
    приложение.запустить()
